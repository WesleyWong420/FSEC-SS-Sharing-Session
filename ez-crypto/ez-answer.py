#!/usr/bin/env python3
from Crypto.Util.number import long_to_bytes
from math import gcd

a =  1870969079253383528901020811919583012674817901777029440472598207624075857424597551104772657070
b =  2800712810085008927480330812056676117466496566710583328698036063700356794222073134503996127684
z1 =  1471692015636458855512725282253417591312312305484809984316224137970424905307644060778134345670
z2 =  792449287882501111272245107538509962076645267685366076350352640742939177817296346333204609371
s = 31337

f1 = z1 - (a * s + b)
f2 = z2 - (a * (a * s + b) + b)
p = gcd(f1, f2)
print(long_to_bytes(int(p)).decode('latin-1'))
print(p)

N = 4892859209552999323872659687370348379127745643113821262786525515571537182220986612456469239342928177158573027631641823744589146302682629015019207630171301051593095288921587679376772619467
e = 65537
ct = 539412014186375973839103813384645095457567346931432414765860827711741737113352253186058334245660603139758935545076579254418244151719401216900449931898980356125612701132273350239082121055
q = N // p
assert N == p * q
d = pow(e, -1, (p-1)*(q-1))
m = pow(ct, d, N)
print(long_to_bytes(m))
